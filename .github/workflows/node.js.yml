# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: todo-web/package-lock.json

    - name: Cache
      id: cache-nodemodules
      uses: actions/cache@v1.2.1
      with:
        # A directory to store and save the cache
        path: todo-web/node_modules
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Dependencies
      if:
        steps.cache-nodemodules.outputs.cache-hit != 'true'
        # ðŸ‘† if cache hits the skip this step.
      run: npm ci      
      working-directory: todo-web
      
    - run: npm run build --if-present
      working-directory: todo-web
    - run: npm run test:ci
      working-directory: todo-web
